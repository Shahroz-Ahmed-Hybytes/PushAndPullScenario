import os
import boto3
import hashlib
def calculate_file_hash(file_path):
    hasher = hashlib.md5()
    with open(file_path, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hasher.update(chunk)
    return hasher.hexdigest()
def check_image_exists(s3_client, bucket_name, s3_key, local_file_path):
    try:
        s3_object = s3_client.get_object(Bucket=bucket_name, Key=s3_key)
        s3_content_hash = s3_object.get("ETag")[1:-1]  # Removing double quotes from ETag
        local_content_hash = calculate_file_hash(local_file_path)
        return s3_content_hash == local_content_hash
    except s3_client.exceptions.NoSuchKey:
        return False  # Object doesn't exist in S3
def upload_folder_to_s3(s3_client, local_folder_path, bucket_name, s3_folder_prefix=""):
    for root, _, files in os.walk(local_folder_path):
        for file in files:
            local_file_path = os.path.join(root, file)
            s3_key = os.path.join(s3_folder_prefix, os.path.relpath(local_file_path, local_folder_path))
            if not check_image_exists(s3_client, bucket_name, s3_key, local_file_path):
                s3_client.upload_file(local_file_path, bucket_name, s3_key)
                print(f"Uploaded '{local_file_path}' to 's3://{bucket_name}/{s3_key}'")
            else:
                print(f"Image '{local_file_path}' already exists in 's3://{bucket_name}/{s3_key}'")
def main():
    # Configure AWS credentials and region
    aws_access_key_id = '?'
    aws_secret_access_key = '?'
    aws_region = 'ap-southeast-1'
    # Initialize the S3 client
    s3_client = boto3.client('s3', aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key, region_name=aws_region)
    # Local folder path to upload
    local_folder_path = '/home/shahroz/Documents/unity/webhooks_test2/webhooks_test2/Project/Assets'
    # AWS S3 bucket name
    bucket_name = 'unity-assets-test5006'
    # S3 folder prefix (optional)
    s3_folder_prefix = 'Assets'
    upload_folder_to_s3(s3_client, local_folder_path, bucket_name, s3_folder_prefix)
if __name__ == "__main__":
    main()
